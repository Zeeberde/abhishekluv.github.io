<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Abhishek Luv]]></title>
  <link href="http://www.abhishekluv.in/atom.xml" rel="self"/>
  <link href="http://www.abhishekluv.in/"/>
  <updated>2016-09-27T17:34:19+05:30</updated>
  <id>http://www.abhishekluv.in/</id>
  <author>
    <name><![CDATA[Abhishek Luv]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Step-by-Step Learning Plan for C#.NET and ASP.NET MVC Framework]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/09/22/step-by-step-learning-plan-for-csharp-and-aspnet-mvc-framework/"/>
    <updated>2016-09-22T15:21:39+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/09/22/step-by-step-learning-plan-for-csharp-and-aspnet-mvc-framework</id>
    <content type="html"><![CDATA[<p>Are you planning to learn ASP.NET MVC?</p>

<p>Don&rsquo;t know how and where to start.</p>

<p>In this post, I&rsquo;ll be sharing with you the ways to learn ASP.NET MVC step-by-step.</p>

<!-- more -->




<h2>Week 1: HTML and CSS</h2>


<p>Without HTML and CSS you won’t be able to do much with ASP.NET MVC.</p>


<p>Week 1 start learning and understanding HTML and CSS for the first 3 days and for the remaining 3 days try creating a simple 3 to 5 page website by applying your knowledge in a practical way.</p>


<p><em>Note: Just create a simple website. You don&rsquo;t need to create a website like a UX/UI Designer. Just understand the basics and create a simple website.</em></p>


<h2>Week 2: JavaScript and jQuery</h2>


<p>JavaScript has become the assembly language of the web. Both JavaScript and jQuery are equally important to learn.</p>


<p>Start with JavaScript first and then play around with some jQuery. jQuery is a framework built on top of JavaScript. So it’s always better to know and understand JavaScript.</p>


<p><em>Note: JavaScript is a very different language when compared with languages like Java and C#. JavaScript is a function based programming language.</em></p>


<h2>Week 3 : C# and .NET Framework Basics</h2>


<p>Now, that you have a basic foundational knowledge of HTML, CSS, JavaScript and jQuery you can start learning C#.</p>


<p>C# is an Object-Oriented Programming language developed by Microsoft.</p>


<p>7 Days of C#:</p>


<ul>
<li>Day 1 : C# keyword basics and Built-types in C#</li>
<li>Day 2 : Operators, Conditioning, Looping in C#</li>
<li>Day 3 : Object-Oriented Concepts like classes and objects</li>
<li>Day 4 : More OOP Concepts inheritance, abstract classes and interfaces</li>
<li>Day 5 : Advanced C# Concepts like Delegates, Generics, Collections, Dictionary, Anonymous and Extension methods</li>
<li>Day 6 : More Advanced C# Concepts like Linq, Lambda Expressions, Func delegate and more..</li>
<li>Day 7 : Creating a Simple C# Console Application using some of the feature of the C# language</li>
</ul>


<p><em>Note: I would recommend getting this book &ldquo;C# 5.0 in a Nutshell Definitive Reference&rdquo;.</em></p>


<h2>Week 4 : ASP.NET MVC Basics</h2>


<p>After getting your hands dirty with the C# programming language you can start with the basics of ASP.NET MVC.</p>


<p>Now&hellip;you would be having this question in your mind. Should I learn ASP.NET WebForms or ASP.NET MVC?</p>


<p>I would recommend you to learn ASP.NET MVC. No need to learn WebForms.</p>


<p>7 Days of ASP.NET MVC:</p>


<ul>
<li>Day 1 : ASP.NET MVC basics like MVC Version, Project Structure, MVC Pattern and Visual Studio basics</li>
<li>Day 2 : Start playing around with Controllers, Views, ViewData and ViewBag</li>
<li>Day 3 : Learn what are Views, Strongly typed Views, Layouts, Sections</li>
<li>Day 4 : Learn what are Controllers, Action Methods, ActionResult types, Action Filters</li>
<li>Day 5 : Learn what are Models, Model Binding, Entity Framework POCO class, Entity Framework DbContext and Data Access using Linq</li>
<li>Day 6 : Learn how to validate Model Data using Data Annotation, Fluent API Validation and Remote Validation</li>
<li>Day 7 : Creating a Simple Timetable Application using some of the features of ASP.NET MVC Framework</li>
</ul>


<p><em>Note: I would recommend getting this book &ldquo;Professional ASP.NET MVC 5&rdquo;.</em></p>


<h2>Week 5 : Building a Web Application</h2>


<p>Now, that you have a lot of knowledge about how to build a web application try creating a web application using the following:</p>


<ul>
<li>HTML, CSS and Bootstrap for User Interface</li>
<li>LINQ and Entity Framework for Data Access</li>
<li>ASP.NET MVC as a server framework</li>
<li>JavaScript and jQuery for AJAX asyn calls to the MVC Controllers</li>
<li>Using .NET Framework classes for tasks like Email sending, getting IP address of the user and etc.</li>
</ul>


<p><em>Application Idea: Create a web application which requests the user to submit a form with their details. The Form should use client and server side validations and should submit the users IP address to the server and in response should send an acknowledgement email saying that we have received your submissions.</em></p>


<p>Learn everything step-by-step.</p>


<p>Take Care!</p>


<p>Peace</p>


<p>Abhishek Luv</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MTA Microsoft Technical Associate (Exam 98-361) Passed]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/09/11/mta-microsoft-technical-associate-exam-98-361-passed/"/>
    <updated>2016-09-11T03:20:47+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/09/11/mta-microsoft-technical-associate-exam-98-361-passed</id>
    <content type="html"><![CDATA[<p>Today, I passed the MTA Microsoft Technical Associate 98-361 Exam with 91 score.
Giving the MTA 98-361 Exam was a great experience. My next goal is to prepare for MCSD 70-480 Exam.</p>

<!-- more -->


<p>MTA 98-361 Exam is not compulsary, but it is a good step to get into the Certification world.</p>

<p><a href="https://www.microsoft.com/en-gb/learning/mta-certification.aspx" target="blank">
<img src="http://dwz6w0xm5nwrx.cloudfront.net/img/MTA_SoftDev_Blk-compressor.png" width="271" height="195">
</a></p>

<p>I&rsquo;ll be posting a series of blog posts about how I prepared for the MTA 98-361 exam which can help newbies who are thinking about giving this exam.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successfully Conducted a 1 Month C# Programming Training for a Computer Institute]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/08/26/successfully-conducted-a-1-month-csharp-programming-training-for-a-computer-institute/"/>
    <updated>2016-08-26T11:27:01+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/08/26/successfully-conducted-a-1-month-csharp-programming-training-for-a-computer-institute</id>
    <content type="html"><![CDATA[<p>Last month from 25th July to 25th Aug, I successfully conducted a 1 month C# Programming Training for a computer institute.</p>

<!-- more -->


<p>It was a great experience teaching a batch of 15 engineering students.</p>

<p>Looking forward to provide my training services to other institutes in Mumbai.</p>

<p>Hi, I’m a Freelance ASP.NET MVC Trainer.</p>




<p>Please connect with me if you're looking for a Freelance ASP.NET MVC Trainer.</p>




<p><strong><em>Topics on which I provide Training:</em></strong></p>




<ul>
<li><strong><em>C# Programming & .NET Framework</em></strong></li>
<li><strong><em>ASP.NET MVC</em></strong></li>
<li><strong><em>Entity Framework</em></strong></li>
</ul>




<p><strong>Note: Please don't contact me for your personal tasks like college or company projects.</strong></p>




<p><div class="container" id="hiremeforwork">
<form action="http://newsletter.rkl.net.in/subscribe" method="POST" accept-charset="utf-8">
<input type="text" name="name" id="name" required placeholder="Name"/>
<br/>
<input type="text" name="email" id="email" required placeholder="Email Address" pattern="[a-zA-Z0-9._\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,4}"/>
<br/>
<input type="text" name="Number" id="Number" placeholder="Phone Number"/>
<br/>
<textarea rows="5" cols="30" name="Message" id="Message" required placeholder="Your Message"></textarea>
<br/>
<input type="hidden" name="list" value="4dnkYoBo4w3qTHQvi56A0w"/>
<input type="submit" name="submit" id="submit" value="Contact Me"/>
</form></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How-To Stay Wise and Happy]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/08/15/how-to-stay-wise-and-happy/"/>
    <updated>2016-08-15T16:37:02+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/08/15/how-to-stay-wise-and-happy</id>
    <content type="html"><![CDATA[<p>I have jotted down a list of points on How-To stay <em>Wise</em> and <em>Happy</em>.</p>

<!-- more -->


<ul>
<li>Always focus on improving yourself first.</li>
<li>Go through life with an open-mind and you will find a lot of open doors.</li>
<li>Be strong and bold</li>
<li>Create new good habits</li>
<li>In order to change your life, change your thoughts and habits.</li>
<li>Old ways wont open new doors.</li>
<li>Get out of your comfort zone. Get uncomfortable in order to succeed.</li>
<li>Depend on no-one but yourself.</li>
<li>You don&rsquo;t need too many friends. Try to create powerful and true friendships.</li>
<li>Forgive people and forget bad feelings, but most importantly: learn from all situations. The weak can never forgive. Forgiveness is an attribute of the strong.</li>
<li>Always keep good company</li>
<li>Expand the edges of your mind. As Bruce Lee said become water.</li>
<li>Speak wisely. Be sure to taste your words before you spit them out.</li>
<li>Make peace with the Past. The past is like an achor holding us back. You must let go of who you were in order to become who you will be.</li>
<li>Don&rsquo;t be to too nice to everyone. Niceness is seen as weakness and will be exploited. The problem with putting others first is that you&rsquo;ve taught them that you are second.</li>
<li>Never reveal your weaknesses to anyone.</li>
<li>Take decisions. Take bad decisions. Learn from those bad decisions and then take good decisions.</li>
<li>Always be you.</li>
<li>Remember same old thinking will not yield new results. Find out your old habit patterns and then act upon it.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Topics to Learn in C# Before Learning ASP.NET MVC(Video)]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/07/04/topics-to-learn-in-csharp-before-learning-asp-dot-net-mvc/"/>
    <updated>2016-07-04T15:59:33+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/07/04/topics-to-learn-in-csharp-before-learning-asp-dot-net-mvc</id>
    <content type="html"><![CDATA[<p>Topics to Learn in C# before Learning ASP.NET MVC.</p>

<p>For more please watch the video..</p>

<!-- more -->


<p></p>

<div class="youtube-container">
<div class="youtube-player" data-id="zZEu1ZRXwms" data-size="maxresdefault">
</div>
</div>


<p>Regards</p>

<blockquote><p>Abhishek Luv</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Students Should Learn C# Before Learning ASP NET MVC(Video)]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/07/01/why-students-should-learn-c-number-before-learning-asp-net-mvc/"/>
    <updated>2016-07-01T16:12:33+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/07/01/why-students-should-learn-c-number-before-learning-asp-net-mvc</id>
    <content type="html"><![CDATA[<p>Why Students should Learn C# before learning ASP NET MVC?</p>

<p>For more please watch the video..</p>

<!-- more -->


<p></p>

<div class="youtube-container">
<div class="youtube-player" data-id="9IZfBJ3hcy0" data-size="maxresdefault">
</div>
</div>


<p>Regards</p>

<blockquote><p>Abhishek Luv</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Want to Be a Software Developer? Let Go Off Perfection(Video)]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/07/01/want-to-be-a-web-developer-let-go-off-perfection/"/>
    <updated>2016-07-01T11:54:14+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/07/01/want-to-be-a-web-developer-let-go-off-perfection</id>
    <content type="html"><![CDATA[<p>Want to be a Software/Web Developer? Let go off Perfection.</p>

<p>Trying to become perfect at something will only stop your progess.</p>

<p>Instead you should try to develop a strong foundational knowledge about your favorite programming language or framework.</p>

<p>For more please watch the video..</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="SrKauGRcRls" data-size="maxresdefault">
</div>
</div>


<p>Regards</p>

<blockquote><p>Abhishek Luv</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update: I'm a Freelance ASP.NET MVC Trainer Now]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/30/update-im-a-freelance-trainer-now/"/>
    <updated>2016-06-30T12:27:47+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/30/update-im-a-freelance-trainer-now</id>
    <content type="html"><![CDATA[<p>Console.WriteLine(&ldquo;Hello! There&rdquo;);,</p>

<p>Just an update. I&rsquo;m a Freelance Trainer Now.</p>

<!-- more -->


<p>From 2014 I have been working as a Freelance ASP.NET MVC Developer and also as an Online Instructor creating courses on topics like Orchard CMS, ASP.NET MVC, Source Control : Git and GitHub.</p>

<p><small>Online Course Statistics</small>
<img src="http://i.imgur.com/GSiNEEX.png" alt="" /></p>

<p><small>Number of Students and Reviews</small>
<img src="http://i.imgur.com/PBy1wuB.png" alt="" /></p>

<p>I have found my passion and that is Teaching/Training and helping others learn things in a simple way.</p>

<p>I am available as a Freelance Trainer(topics: ASP.NET MVC, Entity Framework. C# and others&hellip;) for Training Centers, Institutes, Corporates across India and even Students on an individual basis.</p>

<p>Please <a href="http://www.abhishekluv.in/contact-me/">connect</a> with me if you&rsquo;re looking for a Freelance ASP.NET MVC Trainer.</p>

<blockquote><p>Regards</p>

<p>Abhishek Luv</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 10]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-10/"/>
    <updated>2016-06-05T13:33:20+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-10</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="ykcyMufdz54" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#58;&#97;&#98;&#x68;&#x69;&#115;&#x68;&#x65;&#x6b;&#64;&#x61;&#98;&#104;&#x69;&#x73;&#104;&#x65;&#107;&#x6c;&#117;&#x76;&#x2e;&#105;&#110;&#46;">&#x61;&#98;&#104;&#x69;&#115;&#104;&#101;&#107;&#64;&#x61;&#x62;&#x68;&#105;&#x73;&#x68;&#101;&#107;&#108;&#x75;&#x76;&#46;&#105;&#x6e;&#46;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 9]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-9/"/>
    <updated>2016-06-05T13:33:00+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-9</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="vLW5IJJR4j0" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#x61;&#98;&#104;&#105;&#x73;&#x68;&#101;&#x6b;&#64;&#x61;&#98;&#104;&#105;&#x73;&#x68;&#x65;&#107;&#108;&#x75;&#x76;&#x2e;&#105;&#x6e;&#x2e;">&#x61;&#98;&#x68;&#105;&#x73;&#x68;&#x65;&#x6b;&#x40;&#x61;&#98;&#104;&#105;&#x73;&#x68;&#x65;&#107;&#108;&#x75;&#118;&#x2e;&#x69;&#x6e;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 8]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-8/"/>
    <updated>2016-06-05T13:16:34+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-8</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="GHMGuPLvaVo" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#97;&#98;&#104;&#x69;&#115;&#104;&#x65;&#x6b;&#x40;&#x61;&#98;&#104;&#105;&#115;&#104;&#x65;&#x6b;&#x6c;&#x75;&#118;&#x2e;&#105;&#110;&#x2e;">&#x61;&#x62;&#104;&#105;&#115;&#104;&#101;&#107;&#x40;&#97;&#98;&#104;&#x69;&#115;&#x68;&#101;&#107;&#108;&#x75;&#x76;&#46;&#x69;&#x6e;&#46;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 7]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-7/"/>
    <updated>2016-06-05T13:15:20+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-7</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="9Kq02SSqeXA" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#x3a;&#97;&#x62;&#x68;&#x69;&#x73;&#x68;&#101;&#x6b;&#x40;&#97;&#x62;&#104;&#105;&#115;&#104;&#101;&#x6b;&#x6c;&#117;&#x76;&#46;&#x69;&#110;&#x2e;">&#97;&#98;&#x68;&#x69;&#x73;&#x68;&#101;&#x6b;&#x40;&#97;&#x62;&#104;&#105;&#x73;&#x68;&#x65;&#107;&#108;&#117;&#x76;&#46;&#x69;&#x6e;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 6]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-6/"/>
    <updated>2016-06-05T13:12:27+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-6</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="ZGeKfBw8scM" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#97;&#x62;&#104;&#105;&#x73;&#104;&#101;&#107;&#64;&#97;&#x62;&#x68;&#x69;&#115;&#x68;&#101;&#107;&#108;&#x75;&#x76;&#46;&#105;&#110;&#46;">&#x61;&#x62;&#x68;&#105;&#115;&#x68;&#x65;&#x6b;&#64;&#97;&#x62;&#x68;&#x69;&#115;&#104;&#x65;&#x6b;&#x6c;&#x75;&#x76;&#46;&#x69;&#110;&#46;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 5]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-5/"/>
    <updated>2016-06-05T13:08:57+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-5</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="av22yDlFC-I" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#x3a;&#97;&#x62;&#x68;&#x69;&#115;&#104;&#x65;&#x6b;&#64;&#97;&#98;&#x68;&#105;&#x73;&#104;&#101;&#x6b;&#108;&#117;&#x76;&#x2e;&#105;&#110;&#46;">&#97;&#x62;&#104;&#x69;&#115;&#104;&#x65;&#107;&#x40;&#97;&#98;&#104;&#x69;&#x73;&#x68;&#101;&#x6b;&#x6c;&#x75;&#118;&#46;&#105;&#110;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 4]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-4/"/>
    <updated>2016-06-05T13:05:55+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-4</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="d2XALMeAa80" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#x3a;&#97;&#98;&#104;&#105;&#x73;&#x68;&#101;&#x6b;&#64;&#x61;&#x62;&#104;&#x69;&#115;&#x68;&#x65;&#107;&#x6c;&#117;&#x76;&#x2e;&#105;&#110;&#46;">&#x61;&#x62;&#x68;&#105;&#115;&#104;&#101;&#107;&#64;&#97;&#98;&#x68;&#105;&#x73;&#104;&#101;&#x6b;&#x6c;&#117;&#x76;&#x2e;&#x69;&#110;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 3]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-3/"/>
    <updated>2016-06-05T13:02:06+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-3</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="NSWwm538NoU" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#97;&#x62;&#104;&#105;&#x73;&#104;&#101;&#107;&#64;&#x61;&#98;&#x68;&#x69;&#115;&#104;&#x65;&#107;&#108;&#117;&#x76;&#46;&#x69;&#110;&#46;">&#97;&#x62;&#x68;&#x69;&#x73;&#104;&#x65;&#107;&#64;&#97;&#x62;&#104;&#x69;&#x73;&#x68;&#101;&#107;&#x6c;&#x75;&#118;&#46;&#x69;&#x6e;&#46;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 2]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-2/"/>
    <updated>2016-06-05T12:48:38+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-2</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="1fetD9gfH2s" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#97;&#x62;&#x68;&#x69;&#x73;&#104;&#101;&#107;&#64;&#97;&#x62;&#104;&#x69;&#115;&#104;&#x65;&#x6b;&#108;&#x75;&#x76;&#46;&#105;&#110;&#x2e;">&#x61;&#98;&#104;&#105;&#115;&#104;&#x65;&#107;&#64;&#x61;&#98;&#104;&#105;&#115;&#104;&#101;&#107;&#x6c;&#117;&#118;&#x2e;&#105;&#x6e;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Students Guide to Become a .NET WEB Developer Part 1]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-1/"/>
    <updated>2016-06-05T12:26:10+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/06/05/students-guide-to-become-a-dot-net-web-developer-part-1</id>
    <content type="html"><![CDATA[<p>Students Guide to Become a .NET Web Developer course will be a guidance course and not an actual programming course.</p>

<p>This course will guide you on how to get started with Web Development using .NET.</p>

<!-- more -->




<div class="youtube-container">
<div class="youtube-player" data-id="yziqsCj3TLs" data-size="maxresdefault">
</div>
</div>


<p>Hello There,</p>

<p>My name is Abhishek Luv. I&rsquo;m from Mumbai, India.</p>

<p>I provide training and coaching(online)for the following topics:</p>

<ul>
<li>C# Training</li>
<li>ASP.NET MVC Training</li>
<li>Git &amp; GitHub Training</li>
</ul>


<p>If you are interested then please ping me an email at <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x61;&#x62;&#x68;&#x69;&#x73;&#104;&#101;&#107;&#64;&#97;&#98;&#x68;&#x69;&#x73;&#x68;&#101;&#107;&#108;&#x75;&#x76;&#x2e;&#105;&#110;&#x2e;">&#97;&#x62;&#x68;&#x69;&#x73;&#x68;&#x65;&#x6b;&#64;&#97;&#98;&#104;&#105;&#x73;&#104;&#x65;&#107;&#x6c;&#x75;&#x76;&#46;&#x69;&#x6e;&#x2e;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn C# in 7 Days : Day 2]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/04/09/learn-csharp-in-7-days-day-2/"/>
    <updated>2016-04-09T16:08:02+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/04/09/learn-csharp-in-7-days-day-2</id>
    <content type="html"><![CDATA[<p>Learning C# for beginners can be little difficult in the first place. But it isn&rsquo;t that difficult.</p>

<p>When starting to learn C# you should start with the basics and not get into the deep rabbit hole of it.</p>

<p>This is Day 2 of Learn C# in 7 Days. Checkout <a href="http://www.abhishekluv.in/blog/2016/04/09/learn-csharp-in-7-days-day-1/">Day 1</a> before starting with Day 2.</p>

<!-- more -->


<h2>Topics we&rsquo;ll be discussing</h2>

<ul>
<li>Classes</li>
<li>Objects</li>
<li>Constructor</li>
<li>Methods with returns values</li>
<li>Methods with Parameters and Arguments</li>
<li>This keyword</li>
<li>What is Object-Oriented Programming

<ul>
<li>Encapsulation</li>
<li>Polymorphism</li>
</ul>
</li>
</ul>


<h2>Classes</h2>

<p>A class is a template for creating an object.</p>

<pre><code>public class Employee
{
    // This is a constructor 
    public Employee()
    {

    }
    // This is the Data 
    public string Name;
    public int Age;

    // This is a method which performs actions on the data
    public void DisplayData()
    {
        Console.WriteLine(Name + Age);
    }
}
</code></pre>

<h2>Objects</h2>

<p>An Object is an instance of a class. In other word a snapshot or copy of a class having all the data and methods associated with it.</p>

<pre><code>public class Program
{
    static void Main()
    {
        Employee abhishekluv = new Employee();
        abhishekluv.DisplayData();
    }
}
</code></pre>

<p>The <code>new</code> keyword + <code>Employee()</code> the constructor <code>new Employee()</code> is used to create an object of a class i.e. an instance of a class.</p>

<h2>Constructor</h2>

<p>Every time you declare a class in C# there is a method <code>Public Employee()</code> created in the background automatically by the compiler having the same name as the class.</p>

<ul>
<li>Constructor is a method that has the same name as the class</li>
<li>Constructor is executed when an object is created</li>
<li>Constructor is used to set default/initial values for an object</li>
<li>Constructor doesn&rsquo;t return anything including <code>void</code></li>
</ul>


<p><strong>Play with the constructor</strong></p>

<pre><code>    public Employee()
    {
        Console.WriteLine("Constructor is fired");
    }
</code></pre>

<p><strong>Constructor with Parameters and Arguments</strong></p>

<p>For example: You have declared a class with two public variables and one public method.</p>

<p>As constructors are used to initial default values during object creation you can define those values using a parameterized constructor.</p>

<pre><code>class Employee
{
    public string Name;
    public int Age;

    public Employee()
    {
        Name = 6;
        Age = 5;

        Console.WriteLine("Ctor fired");
    }

    public Employee(string name, int age)
    {
        this.Name = name;
        this.Age = age;
    }
    public void DisplayData()
    {
        Console.WriteLine(Name + Age);
    }
}

// creating a new Employee object by calling the parameterized constructor
Employee abhishekluv = new Employee(3,4);
</code></pre>

<p>When an object of a class is created using the <code>new</code> keyword the constructor method is called to initialize values or get and set private variables using public method parameters and arguments.</p>

<p>In the above given example <code>public Employee(string name, int age)</code> is a parameterized constructor which has two parameters <code>string name</code> and <code>int age</code>.</p>

<h2>This keyword</h2>

<p><code>this</code> keyword is used to access the class level data members, variables and methods.</p>

<p>For example: In the above code, the <code>public Employee(string name, int age)</code> method takes in two arguments or data values for the two defined parameters <code>string name</code> and <code>int age</code>. At the time of object creation these values are applied to the member variables within the class using the this keyword <code>this.Name</code> and <code>this.Age</code>.</p>

<p>Why use <code>this</code> keyword? Because it makes it easy to differentiate between the declared method parameters and the class member variables with the same name. <code>name</code> is the parameter declared for the <code>DisplayData</code> methods and <code>this.Name</code> is used to access the class level member variables.</p>

<h2>Methods with returns values</h2>

<p>Ever wondered why the hell you keep seeing the <code>void</code> keyword everywhere when programming in C#.</p>

<p>Let&rsquo;s talk about it.</p>

<p>Every method performs actions using the data variables and members defined within a class. After performing those actions the method has to return the results of those actions or sometimes not return anything.</p>

<p><code>void</code> keyword is used when you don&rsquo;t want a method to return anything to the calling method/function. And when you want to return something using a method then you will have to specify the return data type of that method.</p>

<p><strong>Example:</strong></p>

<p><em>Note: Method names used in these examples are for educational purpose only. :P</em></p>

<pre><code>Public void IDontReturnAnything(){
    Console.WriteLine("Hello");    
}

Public string IReturnAStringValue()
    return "Hello";
}

Public string IReturnAIntValue()
    return 143;
}
</code></pre>

<h2>Methods with Parameters and Arguments</h2>

<p>One or more variables declared with the Method Signature are called Parameters.</p>

<p>For example:</p>

<p><code>public double FindArea(int length, int width) { }</code></p>

<p>In the above given example <code>int length</code> and <code>int width</code> are parameters declared for the <code>FindArea()</code></p>

<p>When a method is declared with parameters then it means that method can accept input values or in other words it can accept arguments.</p>

<p>The values which we pass to method parameters are called <code>Arguments</code>.</p>

<p>While calling the <code>FindArea()</code> method we can pass the values as argument which the <code>FindArea()</code> method can use for processing like this <code>FindArea(3,4)</code>.</p>

<h2>this Keyword</h2>

<p><code>this</code> keyword in C# is used to access the class level members and data.</p>

<p>In a C# class there are different types of variables.</p>

<ul>
<li>Class level variables (Global to the whole class)</li>
<li>Method level parameter variables (Local to that method only which a method can return)</li>
</ul>


<p>For example:</p>

<p>You have declared a class level variable as <code>int age;</code> and method level parameter variable as <code>int age</code>.</p>

<p>To access class level age use <code>this.age</code> and for method level parameter variable use <code>age</code>.</p>

<pre><code>public class Employee
{
    public int age;

    // this is a parameterized constructor with age as parameter and initializing the class level age variable 
    // using the this keyword
    public Employee(int age)
    {
        // Here we are using this.age to access the class level variables and then assigning the input value of age
       // coming from the age parameter of the constructor
        this.age = age;
    }

    public DisplayEmployeeAage()
    {
        Console.WriteLine("Age is = " + age);
    }
}
</code></pre>

<h2>Object-Oriented Programming</h2>

<p>Any programming language which follows 3 rules of OOP is called a Object-Oriented Programming Language.</p>

<p><strong>Rules for OOP:</strong></p>

<ul>
<li>Encapsulation : Data Hiding</li>
<li>Polymorphism : Overloading and Overriding</li>
</ul>


<p>Let&rsquo;s discuss each of these types in detail.</p>

<p><strong>Encapsulation</strong></p>

<p>Encapsulation is the concept of writing programs with data and methods that act on the data.</p>

<p>With encapsulation also comes another concept called Data Hiding. In data hiding we keep the data safe within the class and only accessible within the class. Now, that doesn&rsquo;t mean we won’t be able to access the class data outside it. Yes we can access the data using public methods declared within a class.</p>

<p>Data hiding concept can be applied by using access modifiers in front of classes, member variables and methods.</p>

<p><em>Commonly used access modifiers:</em></p>

<ul>
<li>public : accessible at class, sub-class and project level</li>
<li>protected : accessible at class and sub-class level</li>
<li>private : accessible at class level only</li>
</ul>


<p>Example:</p>

<pre><code>public class Sample
{
    private int age;
    public int salary { get; private set; }

    public int DisplaySalary()
    {
        return this.salary;
    }

    public void SetData(int age, int salary)
    {
        this.age = age;
        this.salary = salary;
    }

    public void DisplayData()
    {
        Console.Write("age is = " + age);
        Console.Write("salary is = " + salary);
    }
}

public class TestSample
{
    static void Main()
    {
        Sample sample = new Sample();
        sample.SetData(2, 333);
        sample.DisplayData();

        //the age variable of the sample cannot be accessed here
        // is inaccessible due to protection level
        // sample.age;
        // this is encapsulation and data hiding

        Console.Write("\n");

        Console.Write("salary is = " + sample.DisplaySalary());

        Console.ReadLine();
    }
}
</code></pre>

<p>In order to implement data hiding we can use <code>getter</code> and <code>setter</code> to limited read and write access to a particular data member in a class.</p>

<p>In this example we have used <code>get</code> and <code>private set</code> for the salary property <code>public int salary { get; private set; }</code>.</p>

<p><code>get</code> means <code>salary</code> property can be accessed outside of the <code>Sample</code> class and <code>private set</code> means <code>salary</code> property data can be set within the <code>Sample</code> class only and not from outside of the class.</p>

<p><strong>Polymorphism</strong></p>

<p>Polymorphism allows us to define multiple functions/methods/subroutines with the same name which are differentiated by their passing parameters and arguments. It is also known as method overloading or function overloading.</p>

<p>Example:</p>

<p>Let define a <code>Student</code> class with three methods with same name.</p>

<pre><code>public class Student{

    public string name;
    public int age;

    public Student(){
        // this is the constructor
    }

    public void DisplayData(string name){
        Console.WriteLine("Student Name is :" + name);
    }

    public void DisplayData(int age){
        Console.WriteLine("Student Age is: " + age);
    }

}
</code></pre>

<p>Here, we are creating an instance of the <code>Student</code> class and calling the <code>DisplayData</code> method using different argument values. In this case, we are passing a &ldquo;Abhishek&rdquo; as an argument for the <code>name</code> parameter and 27 as an argument for the <code>age</code> parameter. To make it simple to understand when we pass a name then the first <code>DisplayData</code> method will be called and for age the second <code>DisplayData</code> method will be called. This is Method Overloading.</p>

<pre><code>class TestStudent
{
    static void Main()
    {
        Student newStudent = new Student();

        newStudent.DisplayData("Abhishek");
        newStudent.DisplayData(27);
    }
}
</code></pre>

<p><em>Day 2 over</em></p>

<p>Stay Tuned.</p>

<p>Take Care!</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn C# in 7 Days : Day 1]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/04/09/learn-csharp-in-7-days-day-1/"/>
    <updated>2016-04-09T07:07:42+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/04/09/learn-csharp-in-7-days-day-1</id>
    <content type="html"><![CDATA[<p>Learning C# for beginners can be little difficult in the first place. But it isn&rsquo;t that difficult.</p>

<p>When starting to learn C# you should start with the basics and not get into the deep rabbit hole of it.</p>

<p>This is Day 1 of Learn C# in 7 Days.</p>

<p>Let&rsquo;s begin&hellip;</p>

<!-- more -->


<h2>Things you&rsquo;ll need to get started</h2>

<ul>
<li>PC</li>
<li>Visual Studio Express or Community Edition</li>
<li>Interest to learn C#</li>
</ul>


<h2>Hello World Program</h2>

<p>Every programming language is made up by using words and letters known as Keywords.</p>

<p>While programming we use <code>letters</code> and <code>words</code> to form <code>expressions and statements</code> and then those <code>statements</code> can be used within isolated function bodies called as <code>methods</code>.</p>

<pre><code>    class ExampleHelloWorld
    {
        static void Main()
        {
            Console.WriteLine("Hello World");
        }
    }
</code></pre>

<p>In the above given example, <code>class</code>, <code>static</code>, <code>void</code> are keywords and <code>Main()</code> is a method defined by the end user which acts as the entry point for the <code>HelloWorld</code> program.</p>

<p>C# is an object-oriented programming language. We won’t be going into the topic of <code>Classes</code> and <code>Objects</code> as of now.</p>

<p>Let&rsquo;s dissect the above give example.</p>

<p><code>Console</code> is a C# class coming from the <code>System</code> namespace.</p>

<p>Object oriented programming is about creating objects from classes and then using variables and calling methods of those objects.</p>

<p>Similarly in the above given example <code>Console</code> is a class which has a method called <code>WriteLine</code> which prints a value or any data on the console.</p>

<p>Now, How and what will the <code>WriteLine</code> method print on the console? It won’t do anything on its own.</p>

<p>We need to instruct the <code>WriteLine</code> method what to print on the screen and we can do that by passing data to the method known as <code>arguments</code>.</p>

<pre><code>Console.WriteLine("Hello World");
</code></pre>

<p>in the above line of code we are passing a <code>string</code> i.e. &ldquo;Hello World&rdquo; to the <code>WriteLine</code> method. It’s the job of the <code>WriteLine</code> method to print the given data via arguments on the console screen.</p>

<h2>Comments in CSharp</h2>

<p>Code without comments and documentation is bad code.</p>

<p>Comments are lines of text which gives information about the flow of the program and what does a method do when it’s called.</p>

<p>There are three types of comments:</p>

<ul>
<li>Single line comments</li>
<li>Multi-Line comments</li>
<li>XML Documentation comments</li>
</ul>


<p><strong>Single-Line Comments</strong></p>

<pre><code>// this is variable with int data type
int myAge = 28;
</code></pre>

<p><strong>Multi-Line Comments</strong></p>

<pre><code>/* 
This is a multi line comments
You can write whatever you want
 */
</code></pre>

<p><strong>XML Documentation Comments</strong></p>

<pre><code>    /// &lt;summary&gt;
    /// This is the Main Method. It is an entry point for our application
    /// &lt;/summary&gt;
    static void Main()
    {
        string firstName = "Abhishek";

        string lastName = " Luv";

        string fullName = firstName + lastName;

        Console.WriteLine(fullName);
    }
</code></pre>

<p>XML documentation comments are used to write documentations for classes and methods in C#.</p>

<p>These XML comments are then used by Visual Studio to provide us information using Intellisense.</p>

<p>To write a XML comment just press <code>/</code> 3 times on any class or method.</p>

<h2>Data Types in CSharp</h2>

<p>Every programs needs memory and space to store data before it performs any operations and actions on the data.</p>

<p>Every value has a data type associated with it.</p>

<p>For example:</p>

<ul>
<li>A word like <code>Abhishek</code> will be of type <code>string</code> in C#</li>
<li>A numeric value like <code>12345</code> will be of type <code>int</code> in C#</li>
<li>A true or false value will be of type <code>bool</code> in C#</li>
<li>A numeric value like <code>233.33</code> will be of type <code>float</code> in C#
and so on&hellip;</li>
</ul>


<h2>Commonly used Data Types in CSharp</h2>

<ul>
<li>int : for numeric values</li>
<li>long : for larger numeric values</li>
<li>float : single-precision</li>
<li>double : double-precision</li>
<li>decimal : for very very very large numeric values</li>
<li>string : for storing words and text</li>
<li>bool : for storing true or false values</li>
</ul>


<h2>Declaring Variables using Data Types</h2>

<p>int example:</p>

<pre><code>data-type variable-name = variable-value;

int valueForA = 1200;
</code></pre>

<p>string example:</p>

<pre><code>string myName = "Abhishek Luv";
</code></pre>

<p>bool example:</p>

<pre><code>bool IsAvailable = true;
</code></pre>

<h2>Arithmetic Operators in CSharp</h2>

<ul>
<li>(+) : For addition</li>
<li>(-) : for subtraction</li>
<li>(*) : multiplication</li>
<li>/ : division</li>
<li>% : modulus</li>
<li>++ : increment</li>
<li>&ndash; : decrement</li>
</ul>


<p>These are the basic arithmetic operators used in C#. Let’s look at some sample code.</p>

<h2>Relational Operators in CSharp</h2>

<ul>
<li>(>) : Greater than</li>
<li>(&lt;) : Less than</li>
<li>(>=) : Greater than or equal to</li>
<li>(&lt;=) : Less than or equal to</li>
<li>(!=) : Not equal to</li>
<li>(==) : Equal to</li>
</ul>


<h2>Adding Number using in CSharp</h2>

<pre><code>    static void Main()
    {
        int a = 10; 
        int b = 20;

        int sum;

        // here we have used + operator for addition
        sum = a + b; 

        Console.WriteLine(sum);
    }
</code></pre>

<h2>Joining two string values using + Operator</h2>

<p>We can use the same + operator to join two string values in C#.</p>

<pre><code>    static void Main()
    {
        string firstName = "Abhishek";

        string lastName = " Luv";

        // here we have used + operator for joining two string values

        string fullName = firstName + lastName;

        Console.WriteLine(fullName);
    }
</code></pre>

<h2>Playing with If Else If Statement</h2>

<pre><code>    static void Main()
    {
        PlayingWithIf(20, 20);
    }

    static void PlayingWithIf(int x, int y)
    {
        if (x &lt; y)
        {
            Console.WriteLine("x is less than y");
        }

        else if (x &gt; y)
        {
            Console.WriteLine("x is greater than y");
        }

        else if (x == y)
        {
            Console.WriteLine("x is equal to y");
        }

        else
        {
            Console.WriteLine("invalid numbers");
        }
    }
</code></pre>

<p>In this example, we have a static void method called <code>PlayingWithIf</code> which uses <code>If Else If</code> statements with relational operators to print the desired output on the console screen. Don&rsquo;t worry about what is <code>static</code> and <code>void</code>. We&rsquo;ll come to that.</p>

<pre><code>if(x &lt; y) // if x is less than y then print "x is less than y"

else if(x &gt; y) // if x is greater than y then print "x is greater than y"

else if(x == y) // if x is equal to y then print "x is equal to y"

else....
</code></pre>

<p>Notice that the <code>PlayingWithIf</code> method takes in two <code>arguments</code> i.e. whenever the <code>PlayingWithIf</code> method is called we will have to provide two arguments or two values to the method.</p>

<pre><code>    static void Main()
    {
        PlayingWithIf(20, 20);
    }
</code></pre>

<p>Here, we are calling the <code>PlayingWithIf</code> method in our Main method with two arguments (20,20).</p>

<p>It’s always better to write a standalone method than stuffing the entire Main method with code.</p>

<h2>For Loop Statements</h2>

<p>A For loop statement is used for looping to perform actions based on the initial value and the test condition declared within a For loop.</p>

<p>For example: Lets print numbers 10 to 0 using a for loop</p>

<pre><code>    static void Main()
    {
        for (int i = 10; i &gt;= 0; i--)
        {
            Console.WriteLine(i);
        }
    }
</code></pre>

<p>In this example, we have declared a initial variable <code>int i</code> with a value of <code>10</code> i.e. we are saying the For loop to set the initial value equal to 10.</p>

<p><code>i &gt;= 0;</code> is the condition defined within the loop. This instructs the for loop to keep running the loop until the value <code>i</code> is greater than or equal to 0.</p>

<p><code>i--</code> is the action to performed by the for loop for us.</p>

<p>As the loop runs with the help of <code>i--</code> the value <code>i</code> is decremented by -1 till the condition <code>i &gt;= 0</code> is met.</p>

<h2>While Loop</h2>

<p>let’s look at the same example using a while loop in C#.</p>

<pre><code>    static void Main()
    {
        int i = 10; // initial variables declared

        while (i &gt;= 0) // test condition
        {
            Console.WriteLine(i);
            i--; // action to be performed every time the loop runs
        }
    }
</code></pre>

<p>In a While loop, we declare the initial variable and value outside the loop.</p>

<p>While loop starts with a test condition and then the body of the loop within curly braces {}.</p>

<p>Here, the condition is to keep running the loop until the value of i is greater than or equal to zero.</p>

<p>And the action to be performed in within the while loop i.e. <code>i--</code>.</p>

<h2>Do..While loop</h2>

<p>Do..While loop is very similar to the While loop but with only two differences.</p>

<p><strong>First Difference</strong></p>

<p>In a Do..While loop the statements inside the body of the loop are executed once before any conditions are met or the actions are performed by the loop.</p>

<p>For example:</p>

<pre><code>    static void Main()
    {
        int i = 0;

        do
        {
            Console.WriteLine(i);
            i++;
        } while (i &lt;= 10);
    }
</code></pre>

<p><strong>Second Difference</strong></p>

<p>Here, Initial value of <code>i</code> is 0. In a Do..While loop the condition is checked at the end of the loop and in a While loop at the beginning of the loop</p>

<p>And the actions <code>i++</code> is performed within the Do loop.</p>

<h2>Commonly used Logical Operators in CSharp</h2>

<ul>
<li>&amp;&amp; : logical AND</li>
<li>|| : logical OR</li>
</ul>


<p>Example:</p>

<pre><code>    static void Main()
    {
        CheckNumbers(10, 20);
    }

    static void CheckNumbers(int x, int y)
    {
        if (x &gt;= 0 &amp;&amp; y &gt;= 0)
        {
            Console.WriteLine("both numbers positive");
        }

        else if (x &gt;= 0 || y &gt;= 0)
        {
            Console.WriteLine("at least one num is positive");
        }
        else
        {
            Console.WriteLine("both are negative");
        }
    }
</code></pre>

<p>In the above given code, we have a method called <code>CheckNumbers</code>.</p>

<p>The <code>CheckNumbers</code> method takes in two arguments to check whether the numbers are positive or negative.</p>

<pre><code>if (x &gt;= 0 &amp;&amp; y &gt;= 0) 
// 10 &gt;= 0 &amp;&amp; 20 &gt;= 0 
// Result will be : both numbers are positive
</code></pre>

<p>Condition <code>10 &gt;= 0</code> will return true and <code>20 &gt;= 0</code> will also return true. So, true * true is true i.e. both numbers are positive.</p>

<p>Similarly OR <code>||</code> is used check at least one positive number and the <code>else</code> block executes when both the numbers are negative.</p>

<h2>Switch Case Statement</h2>

<p>Switch case statements are very similar to If statements. Switch case can be used with any data type.</p>

<p>In a switch case statement, we provide a value which it uses to compare with the cases defined within the switch statement and display appropriate results on the console.</p>

<p><em>Note: Case declared within a switch case statement has to be constant</em></p>

<pre><code>    static void Main(string[] args)
    {
        PlayingWithSwitchCase("three");
    }

    static void PlayingWithSwitchCase(string j)
    {
        switch (j)
        {
            case "two":
                Console.WriteLine("you entered four in words");
                break;
            case "three":
                Console.WriteLine("you entered three in words");
                break;
            default:
                Console.WriteLine("error");
                break;
        }
    }
</code></pre>

<h2>Arrays in CSharp</h2>

<p>Arrays are used to store a collection of data of similar data types.</p>

<p>For example: If you want to declared 5 int variable how will you do it?</p>

<p>Like this right?</p>

<pre><code>int a = 1;
int b = 2;
int c = 3;
int d = 4;
int e = 5;
</code></pre>

<p>Now, this is a lot of code. It’s better to use arrays to store 5 int values than using 5 different int variables.</p>

<p><strong>Declaring Arrays</strong></p>

<pre><code>int[] arrayName = new int[sizeofthearray];

int[] intArray = new int[5];
</code></pre>

<p>Now int[5] means that this array can hold 5 values. Values or data within an array can be accessed using an index.</p>

<p>For example:</p>

<pre><code>intArray[0], intArray[1] and so on...
</code></pre>

<p><em>Note: Index of an array starts from value 0. i.e. If you want to access the 5th value then you need to use intArray[4]</em></p>

<p><strong>Looping over an array to display data using For Looping</strong></p>

<pre><code>    for (int i = 0; i &lt; intArray.Length; i++)
    {
        Console.WriteLine(intArray[i]);
    }
</code></pre>

<p>The for loop uses the <code>intArray.Length</code> of the array to define a test condition for the loop.</p>

<p><strong>Looping over an array using ForEach loop</strong></p>

<pre><code>    foreach (int tempArrayValue in intArray)
    {
        Console.WriteLine(tempArrayValue);
    }
</code></pre>

<p>The ForEach loop uses a <code>tempArrayValue</code> variable to hold the array values one by one and display it on the console screen.</p>

<h2>Strings in CSharp</h2>

<p>Anything within double quotes <code>"Abhishek Luv"</code> in C# is a string.</p>

<p><strong>Declaring a string</strong></p>

<pre><code>string myName = "Abhishek Luv";
</code></pre>

<p><strong>Declaring an array of string</strong></p>

<pre><code>string[] allListOfName = { "Abhishek", "Abhijeet","Akshay" };
</code></pre>

<p><strong>Commonly used String functions</strong></p>

<ul>
<li>ToUpper()</li>
<li>ToLower()</li>
<li>SubString()</li>
<li>IndexOf</li>
</ul>


<p><strong>Looping over an array of string using foreach loop</strong></p>

<pre><code>foreach (string names in allListOfName)
{
   Console.WriteLine(names);
}
</code></pre>

<p><em>Day 1 over</em></p>

<p>Stay Tuned.</p>

<p>Take Care!</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
</feed>
