<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Abhishek Luv]]></title>
  <link href="http://www.abhishekluv.in/atom.xml" rel="self"/>
  <link href="http://www.abhishekluv.in/"/>
  <updated>2014-03-29T11:28:26+05:30</updated>
  <id>http://www.abhishekluv.in/</id>
  <author>
    <name><![CDATA[Abhishek Luv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating custom HTTP Module in ASP.NET]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/03/12/creating-custom-http-module-in-asp-dot-net/"/>
    <updated>2014-03-12T20:22:12+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/03/12/creating-custom-http-module-in-asp-dot-net</id>
    <content type="html"><![CDATA[<p>The HTTP module&#8217;s code is executed every time a page is requested from the server or a response is sent back to a requestor. HTTP Modules are like the old Internet Server API(ISAPI Filters). All ASP.NET module are managed i.e. they execute within the CLR. ASP.NET itself uses HTTP Modules for things such as session state and caching.</p>

<!-- more -->


<h2>Creating Custom HTTP Module</h2>

<p>HTTP Modules can be created by implementing the IHttpModule interface. Next the IHttpModule.Init method has to be overriden to subscribe the application life cycle events like Application_BeginRequest, AuthenticationRequest, ProcessRequest, Application_EndRequest to the Init method. You need to register your custom HTTP Module by using the Web.config file. Every event in your HTTP Module is fired for each request.</p>

<div><script src='https://gist.github.com/9508505.js'></script>
<noscript><pre><code>using System;
using System.Web;
using System.Diagnostics;

public class LogModule : IHttpModule {

    public LogModule(){
        //constructor
    }

    public string ModuleName {
        get { return &quot;LogModule&quot;; }
    }

    public void Dispose(){

    }

    public void Init(HttpApplication context){
        // registering the events inside the Init method
        context.BeginRequest += 
            (new EventHandler(this.Application_BeginRequest));
        context.EndRequest +=
            (new EventHandler(this.Application_EndRequest));
    }

    public void Application_BeginRequest(Object source, EventArgs e){
        // logging code
        // Begin request logging
    }

    public void Application_EndRequest(Object source, EventArgs e){
        // logging code
        // End request logging
    }
}</code></pre></noscript></div>


<h2>Registering custom HTTP Module using web.config file(IIS7)</h2>

<div><script src='https://gist.github.com/9508720.js'></script>
<noscript><pre><code>&lt;configuration&gt;
    &lt;system.WebServer&gt;
        &lt;modules&gt;
            &lt;add name=&quot;LogModule&quot; type=&quot;LogModule&quot;/&gt;
        &lt;/modules&gt;
    &lt;/system.WebServer&gt;
&lt;/configuration&gt;</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating Custom HTTP Handler in ASP.NET]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/03/10/creating-custom-http-handler-in-asp-dot-net/"/>
    <updated>2014-03-10T22:19:07+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/03/10/creating-custom-http-handler-in-asp-dot-net</id>
    <content type="html"><![CDATA[<p>HTTP Handler is a key to unlocking how HTTP requests are linked to your ASP.NET Pages.</p>

<p>An HTTP Handler is an endpoint on the server that responds to requests for different resources. For Example, ASP.NET Page Handler is called when an ASPX page is requested from the sever. Similarly you can write your own custom handlers to be called when a resource with a specific file extension is requested of the server.</p>

<!-- more -->


<h2>Creating a Custom HTTP Handler</h2>

<p>An HTTP Handler is code that executes when an HTTP request for a specific resource is made to the server.
You can create custom handlers, register them with IIS.</p>

<p>You can create a custom, Synchronous HTTP Handler by implementing the IHttpHandler interface. This interface
requires you to implement the IsResusable property to indicate whether your handler can be resued to increase performance across requests.</p>

<p>The IHttpHandler interface also requires you to implement the ProcessRequest method. This method is called by ASP.NET when your handler executes. HTTP Handler exists inside ASP.NET. Therefore, it has access to the application context including the session state , application state and identity of the user making the request.</p>

<div><script src='https://gist.github.com/9468699.js'></script>
<noscript><pre><code>public class MyImageHandler : IHttpHandler
{
  public book IsReusable 
  {
     get { return false; }
  }

  public void ProcessRequest(HttpContext context)
  {
    // here you will set the MIME type for response 
    context.Response.ContentType = &quot;image/jpeg&quot;;

    HttpRequest Request = context.Request;
    HttpResponse Response = context.Response;

    if(Request.RawUrl.ToLower().Contains(&quot;abhishekluv.jpg&quot;))
    {
        Response.TransmitFile(Request.PhysicalApplicationPath + &quot;/images/abhishekluv.jpg&quot;);
    }
    else
    {
        Response.Write(&quot;File not found&quot;);
    }
  }
}</code></pre></noscript></div>


<h2>Registering custom HTTP Handler using web.config file</h2>

<div><script src='https://gist.github.com/9468923.js'></script>
<noscript><pre><code>&lt;configuration&gt;
    &lt;system.WebServer&gt;
        &lt;handlers&gt;
        &lt;add verb=&quot;*&quot; path=&quot;.jpg&quot; type=&quot;MyImageHandler&quot; name=&quot;MyImageHandler&quot;/&gt;
        &lt;/handlers&gt;
    &lt;/system.WebServer&gt;
&lt;/configuration&gt;</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generic Repository Interface in CSharp]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/01/28/generic-repository-interface-in-csharp/"/>
    <updated>2014-01-28T14:05:21+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/01/28/generic-repository-interface-in-csharp</id>
    <content type="html"><![CDATA[<p>Repository pattern are intended to create an abstraction layer between Data Access layer and business layer so it can help to insulate application from changes in the data store and can facilitate automated unit testing or test-driven development.</p>

<!-- more -->




<div><script src='https://gist.github.com/8664063.js'></script>
<noscript><pre><code>public interface IRepository&lt;T&gt; : IDisposable where T : class
    {
        IQueryable&lt;T&gt; All();

        bool Any(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);

        int Count { get; }

        T Create(T t);

        int Delete(T t);
        int Delete(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);

        T Find(params object[] keys);
        T Find(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);

        IQueryable&lt;T&gt; FindAll(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        IQueryable&lt;T&gt; FindAll(Expression&lt;Func&lt;T, bool&gt;&gt; predicate, int index, int size);

        int Update(T t);       
    }</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mumbai Orchard CMS User Group]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/01/19/mumbai-orchard-cms-user-group/"/>
    <updated>2014-01-19T22:05:19+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/01/19/mumbai-orchard-cms-user-group</id>
    <content type="html"><![CDATA[<p>&#8220;Mumbai Orchard CMS User Group&#8221; is a group for anyone interested in learning Orchard CMS. College , University students and Fresher web developers are welcome. Looking forward to exploring the world of Orchard CMS with everybody.</p>

<!-- more -->


<p>Let&#8217;s Meetup if you are an Orchard CMS Lover or a Newbie. We&#8217;ll have fun talking about Orchard CMS in this first Orchard CMS Mumbai Meetup. Happy Orcharding.</p>

<p><a href="http://www.meetup.com/Orchard-CMS-Mumbai-Meetup/">Mumbai Orchard CMS User Group - Meetup</a></p>

<p><a href="https://github.com/MumbaiOrchardCMSUserGroup">Mumbai Orchard CMS User Group - GitHub</a></p>

<p>We are also working on to launch a <a href="http://www.orchardcmsmumbai.org/">community website for Mumbai Orchard CMS User Group</a></p>

<p>Next : Let&#8217;s decide the Meetup place in Mumbai</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Orchard CMS for Absolute Beginners - Udemy course]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/01/07/orchard-cms-for-absolute-beginners-udemy-course/"/>
    <updated>2014-01-07T17:34:46+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/01/07/orchard-cms-for-absolute-beginners-udemy-course</id>
    <content type="html"><![CDATA[<p>Orchard CMS for Absolute Beginners is a course about the latest open-source .NET Content Management System which is written in ASP.NET platform using the ASP.NET MVC framework.</p>

<!-- more -->


<p><a href="https://www.udemy.com/orchard-cms-for-absolute-beginners" title="Orchard CMS for Absolute Beginners - Udemy Course">Orchard CMS for Absolute Beginners - Udemy Course</a></p>

<p>Grab it and do share it with your friends.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog Post]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/01/07/my-first-blog-post/"/>
    <updated>2014-01-07T00:21:40+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/01/07/my-first-blog-post</id>
    <content type="html"><![CDATA[<p>My first blog post written using Markdown syntax</p>

<!-- more -->


<p>Blog powered by Octopress and Hosted by GitHub Pages</p>

<blockquote><p>Abhishek Luv</p></blockquote>
]]></content>
  </entry>
  
</feed>
