<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HTTPModule | ASP.NET MVC Developer & Orchard CMS Trainer]]></title>
  <link href="http://www.abhishekluv.in/blog/categories/httpmodule/atom.xml" rel="self"/>
  <link href="http://www.abhishekluv.in/"/>
  <updated>2015-05-08T11:22:08+05:30</updated>
  <id>http://www.abhishekluv.in/</id>
  <author>
    <name><![CDATA[Abhishek Luv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating Custom HTTP Module in ASP.NET]]></title>
    <link href="http://www.abhishekluv.in/blog/2014/03/12/creating-custom-http-module-in-asp-dot-net/"/>
    <updated>2014-03-12T20:22:12+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2014/03/12/creating-custom-http-module-in-asp-dot-net</id>
    <content type="html"><![CDATA[<p>The HTTP module&rsquo;s code is executed every time a page is requested from the server or a response is sent back to a requestor. HTTP Modules are like the old Internet Server API(ISAPI Filters). All ASP.NET module are managed i.e. they execute within the CLR. ASP.NET itself uses HTTP Modules for things such as session state and caching.</p>

<!-- more -->


<h2>Creating Custom HTTP Module</h2>

<p>HTTP Modules can be created by implementing the IHttpModule interface. Next the IHttpModule.Init method has to be overriden to subscribe the application life cycle events like Application_BeginRequest, AuthenticationRequest, ProcessRequest, Application_EndRequest to the Init method. You need to register your custom HTTP Module by using the Web.config file. Every event in your HTTP Module is fired for each request.</p>

<p><div><script src='https://gist.github.com/9508505.js'></script>
<noscript><pre><code>using System;
using System.Web;
using System.Diagnostics;

public class LogModule : IHttpModule {

	public LogModule(){
		//constructor
	}

	public string ModuleName {
		get { return &quot;LogModule&quot;; }
	}

	public void Dispose(){

	}

	public void Init(HttpApplication context){
		// registering the events inside the Init method
		context.BeginRequest += 
			(new EventHandler(this.Application_BeginRequest));
		context.EndRequest +=
			(new EventHandler(this.Application_EndRequest));
	}

	public void Application_BeginRequest(Object source, EventArgs e){
		// logging code
		// Begin request logging
	}

	public void Application_EndRequest(Object source, EventArgs e){
		// logging code
		// End request logging
	}
}</code></pre></noscript></div>
</p>

<h2>Registering custom HTTP Module using web.config file(IIS7)</h2>

<p><div><script src='https://gist.github.com/9508720.js'></script>
<noscript><pre><code>&lt;configuration&gt;
	&lt;system.WebServer&gt;
		&lt;modules&gt;
			&lt;add name=&quot;LogModule&quot; type=&quot;LogModule&quot;/&gt;
		&lt;/modules&gt;
	&lt;/system.WebServer&gt;
&lt;/configuration&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
