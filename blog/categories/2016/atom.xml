<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2016 | Abhishek Luv]]></title>
  <link href="http://www.abhishekluv.in/blog/categories/2016/atom.xml" rel="self"/>
  <link href="http://www.abhishekluv.in/"/>
  <updated>2016-02-27T15:51:35+05:30</updated>
  <id>http://www.abhishekluv.in/</id>
  <author>
    <name><![CDATA[Abhishek Luv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Visual Studio Keyboard Shortcuts for Productivity]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/02/27/visual-studio-keyboard-shortcuts-for-productivity/"/>
    <updated>2016-02-27T03:40:08+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/02/27/visual-studio-keyboard-shortcuts-for-productivity</id>
    <content type="html"><![CDATA[<p>In this post, I&rsquo;ll be sharing the Visual Studio keyboard shortcuts that I use everyday and using keyboard shortcuts really helps me to become more productivity.</p>

<!-- more -->


<p><strong>1. Ctrl + .</strong> : U</p>

<p><strong>2. Ctrl + ,</strong> : Allows you to Search and Navigate to a code file within your solution.</p>

<p><strong>Ctrl + Q </strong> : Allows you to Access the Quick launch search bar.</p>

<p><strong>Ctrl + ;</strong> : Allows yout to access Solution explorer search.</p>

<p><strong>F5</strong> : To start with debugging.</p>

<p><strong>Ctrl + F5</strong> : To start without debugging.</p>

<p><strong>Ctrl + Shift + A</strong> : Allows you to open the Add New Item window.</p>

<p><strong>F12 on a literal</strong> : Allows you to view a literal definition.</p>

<p><strong>Shift + F12</strong> : Shows a list of files using a particular literal within a project.</p>

<p><strong>Alt + F12</strong> : Allows you to have a peek look at a literal definition.</p>

<p><strong>Ctrl + Tab</strong> : Browsing opened code files within Visual Studio.</p>

<p>Thank you for reading.</p>

<p>Stay tuned!</p>

<p>Take care</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Beginner's Series : Part 1]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/02/25/javascript-beginner-series/"/>
    <updated>2016-02-25T20:10:38+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/02/25/javascript-beginner-series</id>
    <content type="html"><![CDATA[<p>Welcome to the JavaScript Beginner&rsquo;s Series.</p>

<h2>Topics we&rsquo;ll be covering</h2>

<p><strong>Part 1</strong></p>

<ul>
<li>JavaScript Overview</li>
<li>Ways to add JavaScript code on a HTML page</li>
<li>Variables, DataTypes, Operators and Expressions</li>
</ul>


<!-- more -->


<p><strong>Part 2 (Coming Soon)</strong></p>

<ul>
<li>Conditional Statements : if, else, if else if, switch</li>
<li>Looping Statements : while, do..while, for, for..in</li>
</ul>


<p><strong>Part 3 (Coming Soon)</strong></p>

<ul>
<li>Functions</li>
<li>Arrays</li>
<li>Understanding the Scope : Availability of variables globally or locally</li>
</ul>


<p><strong>Part 4 (Coming Soon)</strong></p>

<ul>
<li>Understanding Objects Literals</li>
<li>Objects in JavaScripts : Number, Boolean, String, Date, Math</li>
<li>Understanding the DOM : Document Object Model</li>
</ul>


<h2>JavaScript Beginner&rsquo;s Series : Part 1</h2>

<h3>JavaScript Overview</h3>

<p>JavaScript is the assembly language of the Web. JavaScript is a high-level, dynamic, untyped, and interpreted programming language.  Do not confuse JavaScript with Java.</p>

<p>In this beginner&rsquo;s series, we&rsquo;ll be learning the basic building blocks of JavaScript that every beginner or a newbie needs to know.</p>

<h3>Ways to add JavaScript code on a HTML page</h3>

<p><strong>Adding JavaScript Code using the <code>&lt;script&gt;&lt;/script&gt;</code> tag with the <code>type</code> attribute</strong></p>

<p><div><script src='https://gist.github.com/8edd49cd1e018dec570e.js'></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        // your javascript code will go here
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></noscript></div>
</p>

<p><strong>Adding JavaScript file using the <code>src</code> attribute of the <code>&lt;script&gt;&lt;/script&gt;</code> tag in the <code>&lt;head&gt;&lt;/head&gt;</code> section</strong></p>

<p><div><script src='https://gist.github.com/f122e9128c71db141ac1.js'></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;/Scripts/custom.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></noscript></div>
</p>

<p>JavaScript code or file is placed in the <code>&lt;head&gt;</code> section when you want to run some code on a click event somewhere on your web page.</p>

<p><strong>Adding JavaScript code or file using the <code>&lt;script&gt;&lt;/script&gt;</code> tag in the <code>&lt;body&gt;&lt;/body&gt;</code> section</strong></p>

<p><div><script src='https://gist.github.com/b047d396dcc4ba6d16d0.js'></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
   
    &lt;!-- adding JavaScript code using embedding code --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    
    &lt;/script&gt;

    &lt;!-- adding JavaScript code using an external file --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;/Scripts/custom.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre></noscript></div>
</p>

<p>JavaScript code or file is placed in the <code>&lt;body&gt;</code> section when you want to generate some content on the web page using some JavaScript code as soon as the page loads.</p>

<h3>Variables, DataTypes, Operators and Expressions</h3>

<p><strong>Variables</strong></p>

<p><code>var</code> keyword is used to declare a variable in JavaScript. You should always use the <code>var</code> keyword to declare a variable in JavaScript.</p>

<p>Types of variables in JavaScript :</p>

<ul>
<li>Global variables (Global Scope)</li>
<li>Local and Block level variables (Local Scope)</li>
</ul>


<p>Variables in JavaScript are written in CamelCase for ex: <code>isItGlobal</code>.</p>

<p>Let&rsquo;s look at some code.</p>

<p><div><script src='https://gist.github.com/7822828e8f6a68e89a4a.js'></script>
<noscript><pre><code>isItGlobal = &quot;variable with global scope&quot;; // this variable is global

function localFunction() {
    isItGlobal = &quot;variable with local scope&quot;; // this variable is local to the local Function
    document.write(isItGlobal + &quot;&lt;br/&gt;&quot;);
}

document.write(isItGlobal + &quot;&lt;br/&gt;&quot;);
localFunction();</code></pre></noscript></div>
</p>

<p><strong>Data Types</strong></p>

<ul>
<li>Numbers : eg: 157, 457</li>
<li>Strings : eg: &ldquo;This is string&rdquo;, &lsquo;This is string&rsquo;</li>
<li>Booleans : eg: true or false</li>
<li>Undefined</li>
</ul>


<p>In JavaScript, datatype is inferred by the type of data or value assigned for a variable.</p>

<p>For ex: If we assign 124 value to a variable <code>var myValue = 124</code>. The data type for <code>myValue</code> will be <code>Number</code>.</p>

<p>Let&rsquo;s look at some code and find out the data type of a variable (using the typeof keyword).</p>

<p><div><script src='https://gist.github.com/12def5fc1d24314305b1.js'></script>
<noscript><pre><code>var myVariable = &quot;I&#39;m a variable&quot;;
var myVariable2 = 1234;
var myVariable3 = true;

document.write(myVariable + &quot;&lt;br/&gt;&quot;);
document.write(myVariable2 + &quot;&lt;br/&gt;&quot;);
document.write(myVariable3 + &quot;&lt;br/&gt;&quot;);

// Now let&#39;s look at the type of a given variable by using the typeof keyword

document.write(&quot;myVariable is of type : &quot; + typeof myVariable + &quot;&lt;br/&gt;&quot;); 
document.write(&quot;myVariable2 is of type : &quot; + typeof myVariable2 + &quot;&lt;br/&gt;&quot;);
document.write(&quot;myVariable3 is of type : &quot; + typeof myVariable3 + &quot;&lt;br/&gt;&quot;);

// Output
//I&#39;m a variable
//1234
//true
//myVariable is of type : string
//myVariable2 is of type : number
//myVariable3 is of type : boolean</code></pre></noscript></div>
</p>

<p><strong>Operators</strong></p>

<p>Operators allows us to compute data in a programming language.</p>

<p>JavaScript support the following types of operators :</p>

<ul>
<li>Arithmetic</li>
<li>Comparison</li>
<li>Logical</li>
<li>Assignment</li>
<li>Ternary</li>
</ul>


<p>In order for an operator to work it needs two operands.</p>

<p>For ex:</p>

<p><code>4 + 5 = 9</code> Here, 4 and 5 are the two operands and <code>+</code> is the operator.</p>

<p><strong>Arithmetic Operator</strong></p>

<p><div><script src='https://gist.github.com/557a912dea9e8b7a11d1.js'></script>
<noscript><pre><code>var a = 50;
var b = 20;

document.write(&quot;add : &quot;, a + b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;sub : &quot;, a - b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;mul : &quot;, a * b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;div : &quot;, a / b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;modulus : &quot;, a % b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;increment : &quot;, ++a);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;decrement : &quot;, --b);</code></pre></noscript></div>
</p>

<p><strong>Comparison Operator</strong></p>

<p><div><script src='https://gist.github.com/7ce55ae7931c868ca91f.js'></script>
<noscript><pre><code>var a = 50;
var b = 20;

document.write(&quot;greater than : &quot;, a &gt; b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;less than : &quot;, a &lt; b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;not equal : &quot;, a != b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;equal too : &quot;, a == b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;greater than or equal too : &quot;, a &gt;= b);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(&quot;less than or equal too : &quot;, a &lt;= b);
document.write(&quot;&lt;br/&gt;&quot;);

// OutPut
//greater than : true
//less than : false
//not equal : true
//equal too : false
//greater than or equal too : true
//less than or equal too : false</code></pre></noscript></div>
</p>

<p><strong>Logical Operator</strong></p>

<p><div><script src='https://gist.github.com/e46ce97071308ded879c.js'></script>
<noscript><pre><code>var a = true;
var b = false;

document.write(&quot;a &amp;&amp; b : &quot;, a &amp;&amp; b);
document.write(&quot;&lt;br/&gt;&quot;);


document.write(&quot;a || b : &quot;, a || b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;logical not : &quot;, !(a &amp;&amp; b));
document.write(&quot;&lt;br/&gt;&quot;);

// OutPut
//a &amp;&amp; b : false
//a || b : true
//a | b : true</code></pre></noscript></div>
</p>

<p><strong>Assignment Operator</strong></p>

<p>The Assignment assigns values from the right side operand to the left side operand.</p>

<p>+= (Add &amp; Assignment) : adds the right operand to the left operand and assigns the result to the left operand.</p>

<p>-= (Subtract &amp; Assignment) : subtract the right operand to the left operand and assigns the result to the left operand.</p>

<p>*= (Multiple &amp; Assignment) : Multiples the right operand to the left operand and assigns the result to the left operand.</p>

<p>/= (Division &amp; Assignment) : Divides the right operand to the left operand and assigns the result to the left operand.</p>

<p>%= (Modulus &amp; Assignment) : Modulus operation happens from right operand to left operand and assigns the result to the left operand.</p>

<p><div><script src='https://gist.github.com/294352c796dbe108b330.js'></script>
<noscript><pre><code>var a = 50;
var b = 20;

document.write(&quot;a = b = &gt; &quot;, a = b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;a = a + b = &gt; &quot;, a += b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;a = a - b = &gt; &quot;, a -= b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;a = a * b = &gt; &quot;, a *= b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;a = a / b = &gt; &quot;, a /= b);
document.write(&quot;&lt;br/&gt;&quot;);

document.write(&quot;a = a % b = &gt; &quot;, a %= b);
document.write(&quot;&lt;br/&gt;&quot;);

// Output
//a = b = &gt; 20
//a = a + b = &gt; 40
//a = a - b = &gt; 20
//a = a * b = &gt; 400
//a = a / b = &gt; 20
//a = a % b = &gt; 0</code></pre></noscript></div>
</p>

<p><strong>Ternary Operator</strong></p>

<p>The Ternary operator first checks the expressions for a true or false value and then executes the given statements.</p>

<p>For ex:</p>

<p><div><script src='https://gist.github.com/7b6348e972f27f5c0269.js'></script>
<noscript><pre><code>var someValue = 25;
var myResult = &quot;&quot;;
var myResult1 = &quot;&quot;;
myResult = (someValue == 24) ? &quot;equal&quot; : &quot;not equal&quot;;
myResult1 = (someValue == 25) ? &quot;equal&quot; : &quot;not equal&quot;;
document.write(myResult);
document.write(&quot;&lt;br/&gt;&quot;);
document.write(myResult1);
</code></pre></noscript></div>
</p>

<p><em>Part 2 coming soon</em></p>

<p>Thank you for reading.</p>

<p>Stay tuned!</p>

<p>Take care</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Decisions That Changed My Life : Part 2]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/02/20/decisions-that-changed-my-life-part-2/"/>
    <updated>2016-02-20T21:25:28+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/02/20/decisions-that-changed-my-life-part-2</id>
    <content type="html"><![CDATA[<p>Decisions That Changed My Life : Part 2.</p>

<!-- more -->


<ul>
<li>Putting myself first</li>
<li>Eating less, Feeling better and letting the body repair itself</li>
<li>Being more conscious</li>
<li>Being myself</li>
<li>Staying grounded</li>
<li>Taking time to get to know myself</li>
<li>Being good to myself</li>
<li>Never regretting about past failures</li>
<li>Being responsible for my beliefs</li>
<li>Avoiding negative environments</li>
<li>Not aiming for perfection</li>
<li>Accepting my past mistakes and experiences</li>
</ul>


<p>Thank you for reading.</p>

<p>Stay tuned!</p>

<p>Take care</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monthly Review : January 2016]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/01/29/monthly-review-january-2016/"/>
    <updated>2016-01-29T22:08:14+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/01/29/monthly-review-january-2016</id>
    <content type="html"><![CDATA[<p>This is my first monthly review. Keeping a note of every task I have really helped myself to stay more focused and measure my progress in a better way.</p>

<p><em>As I had mentioned in one of my <a href="/blog/2015/12/21/plans-for-year-2016/">previous post</a> that I will be keeping track of every task I do and blog about it online.</em></p>

<!-- more -->


<h2>Review for January 2016</h2>

<ul>
<li>Stopped using Facebook :P</li>
<li>Finished listening to an audio book &ldquo;Living Health&rdquo; by Tony Robbins</li>
<li>Launched <a href="https://www.youtube.com/channel/UCAQxeMbUaKePrVE3wbNZxjg">Orchard Beginner YouTube channel</a></li>
<li>Completed and Uploaded <a href="https://www.youtube.com/channel/UCAQxeMbUaKePrVE3wbNZxjg/playlists?view=1&amp;flow=list&amp;sort=da">3 course modules for Orchard Beginner</a></li>
<li>Finished reading a book called <a href="http://www.amazon.in/Your-Erroneous-Zones-Step-Step/dp/0060919760">&ldquo;Your Erroneous Zone&rdquo;</a> by Wayne dyer</li>
<li>Integrated <a href="https://www.instamojo.com/">InstaMojo</a> with Develop2Deploy for accepting and receiving payments</li>
<li>Completed 2 courses for Develop2Deploy(Sorry the Website and Courses are still offline and underdevelopment)</li>
<li>Read a 35 page book <a href="http://www.amazon.in/gp/product/B00FIZ5G3I?psc=1&amp;redirect=true&amp;ref_=oh_aui_d_detailpage_o00_">&ldquo;The Opinionated Software Developer: What Twenty-Five Years of Slinging Code Has Taught Me&rdquo;</a> by Shawn Wildermuth</li>
</ul>


<p>Stay tuned.</p>

<p>Take care!</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ways in Which You Can Contribute to Open Source Projects]]></title>
    <link href="http://www.abhishekluv.in/blog/2016/01/28/ways-in-which-you-can-contribute-to-open-source-projects/"/>
    <updated>2016-01-28T16:49:57+05:30</updated>
    <id>http://www.abhishekluv.in/blog/2016/01/28/ways-in-which-you-can-contribute-to-open-source-projects</id>
    <content type="html"><![CDATA[<p>I love open source projects and contributing to open source projects has helped me in many ways.</p>

<h2>Benefits of contributing to open source projects:</h2>

<ul>
<li>Opportunity to meet new people online</li>
<li>Community owners and contributors will trust you without meeting you in person</li>
<li>Community appreciations</li>
<li>and many more&hellip;</li>
</ul>


<p>Never contributed to any open source project?</p>

<!-- more -->


<p>No problem. Find an open source project in your area of interest and start contributing.</p>

<p>Let me share my contributing experience and how I started contributing to an open source project called &ldquo;Orchard&rdquo;.</p>

<p>BTW.</p>

<p>Orchard CMS is a free, open source, community-focused Content Management System built on the ASP.NET MVC platform.</p>


<p>Orchard is delivered under the .NET Foundation <a href="http://www.dotnetfoundation.org/orchard">http://www.dotnetfoundation.org/orchard</a>. For more info on Orchard visit the official website <a href="http://www.orchardproject.net/">http://www.orchardproject.net/</a>
and for more Orchard CMS tutorials subscribe to <a href="https://www.youtube.com/channel/UCAQxeMbUaKePrVE3wbNZxjg">Orchard Beginner YouTube channel.</a></p>


<p>Let&rsquo;s talk about the ways in which you can contribute to open source projects.</p>

<ul>
<li>Write documentations</li>
<li>Create tutorials</li>
<li>Create premium tutorials</li>
<li>Contribute source code or Help find/fix bugs</li>
<li>Spread the word and your knowledge</li>
<li>Appreciating the community and not be a jerk</li>
<li>Interview other open source contributors and share knowledge</li>
</ul>


<h2>Write documentations</h2>

<p>Most open source projects lack good documentation and this is an opportunity for you as a newbie or an experienced developer to put in some efforts and start writing documentations for your favourite open source project.</p>

<p>Most of the open source documentations are written in .md Markdown so make sure to learn Markdown before starting to contribute/fix documentations.</p>

<p>Community owners and members really appreciate genuine contributors and might give write/push access to the documentation repository.</p>

<p>For example:</p>

<p><a href="http://docs.orchardproject.net/Contributors">http://docs.orchardproject.net/Contributors</a></p>

<h2>Create tutorials</h2>

<p>After writing some documentation and gaining some experience with an open source project you can move to the next level and start creating video tutorials which will ultimately help new community members and shorten the learning curve.</p>

<p>Creating tutorials and uploading them on YouTube comes with added bonus i.e. <a href="http://orchardbeginner.com/">more traffic to your own blog or website</a> which can bring in some nice exposure for you as a contributor/developer.</p>

<p>For example:</p>

<p>It makes me feel so appreciated when other developers and contributors share my tutorial and course links on Stackoverflow.</p>

<p><a href="http://stackoverflow.com/a/11452276">http://stackoverflow.com/a/11452276</a></p>

<h2>Create premium tutorials</h2>

<p>With uploading free tutorials on YouTube you can even start selling premium tutorials and courses via online platforms like Udemy.</p>

<p>For example:</p>

<p>After creating my first Orchard tutorial series I created 2 premium courses and the response I got from the community and subscribers were astonishing. All of my Orchard courses are listed on the official documentation website of Orchard.</p>

<p><a href="http://docs.orchardproject.net/Documentation/Orchard-TV">http://docs.orchardproject.net/Documentation/Orchard-TV</a></p>

<h2>Contribute source code or Help find/fix bugs</h2>

<p>The number one way to help out is find/fix bugs for your favourite open source project. Found a bug fix it or let other community contributors know about it.</p>

<p>Most of the open source projects are hosted on GitHub so make sure to learn Git and GitHub before creating issues/pull requests for your favourite open source project.</p>

<p>For example:</p>

<p>The community owners and members appreciated my contribution with a shout out.</p>

<p><a href="http://docs.orchardproject.net/Documentation/Orchard-1-9.Release-Notes#Contributors">http://docs.orchardproject.net/Documentation/Orchard-1-9.Release-Notes#Contributors</a></p>

<h2>Spread the word and your knowledge</h2>

<p>You can go and tell the world about your favourite open source project. Tweet about it. Blog about it. Just help get the word out and make the project more popular.</p>

<p><a href="http://orchardbeginner.com/">http://orchardbeginner.com/</a></p>

<h2>Appreciating the community and not be a jerk</h2>

<p>Never ever act like a jerk while interacting with the community contributors and members. Never try to take them for granted.</p>

<h2>Interview other open source contributors and share knowledge</h2>

<p>You can even interview other contributors of your favourite open source projects and share the knowledge.</p>

<p>If you have any other ideas on how to contribute, please share them below in the comments.</p>

<p>Stay tuned.</p>

<p>Take care!</p>

<p>Abhishek Luv</p>
]]></content>
  </entry>
  
</feed>
